{"ast":null,"code":"var _jsxFileName = \"/Users/tamaraendorasudharto/Documents/ISEF01-Quizsystem/quizsystem/src/components/QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"../components/Header\";\nimport { useNavigate, useLocation, data } from 'react-router-dom';\nimport { BASE_URL } from '../fetchApi';\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const base_url = BASE_URL;\n  const location = useLocation();\n  const state = location.state;\n  const socket = io(base_url);\n  const [msg, setMsg] = useState(\"\");\n  const [mode, setMode] = useState(state.mode);\n  const [timerDuration, setTimerDuration] = useState(\"\");\n  const [timeLeft, setTimeLeft] = useState(state.timerDuration);\n  const [loopQuestion, setLoopQuestion] = useState([]);\n  const [gameId, setGameId] = useState(state.gameId);\n  const [question, setQuestion] = useState({});\n  const navigate = useNavigate();\n  const [quizId, setQuizId] = useState(\"\");\n  const [point, setPoint] = useState(\"\");\n  const quizStart = async () => {\n    try {\n      const response = await fetch(`${base_url}/quiz/start`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mode: mode,\n          user_id: sessionStorage.getItem('user_id'),\n          timerDuration: timerDuration\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const result = await response.json();\n      setQuizId(result.quizId);\n      setLoopQuestion(result.questions);\n    } catch (error) {\n      console.error(\"Error fetching quiz data:\", error);\n    }\n  };\n  useEffect(() => {\n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    }\n    console.log(state);\n    setMode(state.mode);\n    setTimerDuration(state.timerDuration);\n    setGameId(state.gameId);\n    console.log(state);\n    quizStart();\n  }, [navigate]);\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to server\");\n    });\n    socket.on(\"updateScore\", data => {\n      console.log(data);\n      //navigate(`/quizende`, { state: data });\n    });\n    socket.on(\"gameOver\", data => {\n      console.log(data);\n      //navigate(`/quizende`, { state: data });\n    });\n    socket.on(\"error\", data => {\n      console.log(data);\n    });\n    socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected from server\");\n    });\n    return () => {\n      socket.off(\"connect\");\n      socket.off(\"updateScore\");\n      socket.off(\"gameOver\");\n      socket.off(\"error\");\n      socket.off(\"disconnect\");\n    };\n  }, []);\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else {\n      submitQuiz();\n    }\n  }, [timeLeft]);\n  const handleOptionChange = (questionId, value) => {\n    setQuestion(prev => ({\n      ...prev,\n      [questionId]: value\n    }));\n  };\n  const submitQuiz = async () => {\n    try {\n      // var aTrue = 0;\n      var uScore = 0;\n      for (const item of loopQuestion) {\n        const dataPost = {\n          quizId: quizId,\n          questionId: item.id,\n          answer: question[item.id] || null,\n          // Send the selected answer or null if not answered\n          userId: sessionStorage.getItem('user_id')\n        };\n\n        //console.log(dataPost);\n        const response = await fetch(`${base_url}/quiz/submit`, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(dataPost)\n        });\n        if (!response.ok) {\n          console.log(`Error submitting question ${item.id}: ` + response.statusText);\n          alert(`Failed to submit answer for question ${item.id}`);\n          return;\n        }\n        const result = await response.json();\n        // const dataEmit = {\n        //   gameId: gameId,\n        //   userId: sessionStorage.getItem('user_id'),\n        //   questionId: item.id,\n        //   answer: question[item.id] || null\n        // };\n        //console.log(result);\n        if (result.points > 0) {\n          uScore += result.points;\n        }\n\n        // navigate('/quizende',{ state:result });\n        // socket.emit(\"submitAnswer\",{\n        //   gameId: gameId,\n        //   userId: sessionStorage.getItem('user_id'),\n        //   questionId: item.id,\n        //   answer: question[item.id] || null\n        // });\n\n        // socket.emit(\"endGame\",{\n        //   gameId: gameId\n        // });\n\n        //console.log(result);\n        // if(result.points > 0){\n        //   aTrue++;\n        //   uScore += result.points;\n        // }\n      }\n      navigate(\"/quizende\", {\n        state: {\n          gameId: gameId,\n          points: uScore\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      alert(\"An error occurred while submitting the answers\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid d-flex flex-column min-vh-100 px-0\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"d-flex flex-column align-items-center flex-grow-1 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end w-50 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge bg-danger fs-5\",\n          children: [timeLeft, \" Sekunden, \", mode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), (() => {\n        const elements = [];\n        for (let index = 0; index < loopQuestion.length; index++) {\n          const item = loopQuestion[index];\n          elements.push(/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-4 shadow-sm mb-4\",\n            style: {\n              width: \"50%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-light\",\n              children: [\"Frage \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: (() => {\n                  const options = [];\n                  const parsedOptions = Array.isArray(item.options) ? item.options : JSON.parse(item.options || \"[]\"); // Parse options if it's a string\n                  for (let optIndex = 0; optIndex < parsedOptions.length; optIndex++) {\n                    const option = parsedOptions[optIndex];\n                    options.push(/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-check\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-check-input\",\n                        type: \"radio\",\n                        name: `question-${item.id}`,\n                        id: `option-${item.id}-${optIndex}`,\n                        value: option,\n                        onChange: e => handleOptionChange(item.id, e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 21\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"form-check-label\",\n                        htmlFor: `option-${item.id}-${optIndex}`,\n                        children: option\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 21\n                      }, this)]\n                    }, optIndex, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 21\n                    }, this));\n                  }\n                  return options;\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this));\n        }\n        return elements;\n      })(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex text-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: submitQuiz,\n          children: \"Antwort best\\xE4tigen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"p8yGeetRqByfHEwgk68lFA7abck=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","Header","useNavigate","useLocation","data","BASE_URL","io","jsxDEV","_jsxDEV","QuizPage","_s","base_url","location","state","socket","msg","setMsg","mode","setMode","timerDuration","setTimerDuration","timeLeft","setTimeLeft","loopQuestion","setLoopQuestion","gameId","setGameId","question","setQuestion","navigate","quizId","setQuizId","point","setPoint","quizStart","response","fetch","method","headers","body","JSON","stringify","user_id","sessionStorage","getItem","ok","Error","statusText","result","json","questions","error","console","token","log","on","off","timer","setTimeout","clearTimeout","submitQuiz","handleOptionChange","questionId","value","prev","uScore","item","dataPost","id","answer","userId","alert","points","className","children","fileName","_jsxFileName","lineNumber","columnNumber","elements","index","length","push","style","width","options","parsedOptions","Array","isArray","parse","optIndex","option","type","name","onChange","e","target","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/Users/tamaraendorasudharto/Documents/ISEF01-Quizsystem/quizsystem/src/components/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"../components/Header\";\nimport { useNavigate, useLocation, data } from 'react-router-dom';\nimport { BASE_URL } from '../fetchApi';\nimport { io } from \"socket.io-client\";\n\nconst QuizPage = () => {\n  const base_url = BASE_URL;\n  const location = useLocation();\n  const state = location.state;\n  const socket = io(base_url);\n\n  const [msg,setMsg] = useState(\"\");\n  const [mode,setMode] = useState(state.mode);\n  const [timerDuration, setTimerDuration] = useState(\"\");\n  const [timeLeft, setTimeLeft] = useState(state.timerDuration);\n  const [loopQuestion,setLoopQuestion] = useState([]);\n  const [gameId,setGameId] = useState(state.gameId);\n\n  const [question, setQuestion] = useState({});\n  const navigate = useNavigate();\n\n  const [quizId,setQuizId] = useState(\"\");\n\n  const [point,setPoint] = useState(\"\");\n\n  const quizStart = async () => {\n    try {\n      const response = await fetch(`${base_url}/quiz/start`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          mode: mode,\n          user_id: sessionStorage.getItem('user_id'),\n          timerDuration: timerDuration\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      setQuizId(result.quizId);\n      setLoopQuestion(result.questions);\n    } catch (error) {\n      console.error(\"Error fetching quiz data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    }\n\n    console.log(state);\n\n    setMode(state.mode);\n    setTimerDuration(state.timerDuration);\n    setGameId(state.gameId);\n\n    console.log(state);\n\n    quizStart();\n  }, [navigate]);\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to server\");\n    });\n\n    socket.on(\"updateScore\", (data) => {\n      console.log(data);\n      //navigate(`/quizende`, { state: data });\n    });\n\n    socket.on(\"gameOver\", (data) => {\n      console.log(data);\n      //navigate(`/quizende`, { state: data });\n    });\n\n    socket.on(\"error\", (data) => {\n      console.log(data);\n    });\n\n    socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected from server\");\n    });\n\n    return () => {\n      socket.off(\"connect\");\n      socket.off(\"updateScore\");\n      socket.off(\"gameOver\");\n      socket.off(\"error\");\n      socket.off(\"disconnect\");\n    };\n  }, []);\n\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    }else{\n      submitQuiz();\n    }\n  }, [timeLeft]);\n\n  \n\n  const handleOptionChange = (questionId, value) => {\n    setQuestion((prev) => ({\n      ...prev,\n      [questionId]: value,\n    }));\n  };\n\n  const submitQuiz = async () => {\n    try {\n      // var aTrue = 0;\n      var uScore = 0;\n      for (const item of loopQuestion) {\n        const dataPost = {\n          quizId: quizId,\n          questionId: item.id,\n          answer: question[item.id] || null, // Send the selected answer or null if not answered\n          userId: sessionStorage.getItem('user_id')\n        };\n\n        //console.log(dataPost);\n        const response = await fetch(`${base_url}/quiz/submit`, {\n          method: \"POST\",\n          headers: {\n          'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(dataPost)\n        });\n\n        if (!response.ok) {\n          console.log(`Error submitting question ${item.id}: ` + response.statusText);\n          alert(`Failed to submit answer for question ${item.id}`);\n          return;\n        }\n\n        const result = await response.json();\n        // const dataEmit = {\n        //   gameId: gameId,\n        //   userId: sessionStorage.getItem('user_id'),\n        //   questionId: item.id,\n        //   answer: question[item.id] || null\n        // };\n        //console.log(result);\n        if(result.points > 0){\n          uScore += result.points;\n        }\n\n        // navigate('/quizende',{ state:result });\n        // socket.emit(\"submitAnswer\",{\n        //   gameId: gameId,\n        //   userId: sessionStorage.getItem('user_id'),\n        //   questionId: item.id,\n        //   answer: question[item.id] || null\n        // });\n\n        // socket.emit(\"endGame\",{\n        //   gameId: gameId\n        // });\n\n        //console.log(result);\n        // if(result.points > 0){\n        //   aTrue++;\n        //   uScore += result.points;\n        // }\n\n      }\n\n      navigate(\"/quizende\", { state: {gameId:gameId,points:uScore} });\n    } catch (error) {\n      console.log(error);\n      alert(\"An error occurred while submitting the answers\");\n    }\n  };\n\n  return (\n    <div className=\"container-fluid d-flex flex-column min-vh-100 px-0\">\n      <Header />\n      <main className=\"d-flex flex-column align-items-center flex-grow-1 mt-5\">\n        <div className=\"d-flex justify-content-end w-50 mb-2\">\n          <span className=\"badge bg-danger fs-5\">{timeLeft} Sekunden, {mode}</span>\n        </div>\n\n        {(() => {\n          const elements = [];\n          for (let index = 0; index < loopQuestion.length; index++) {\n            const item = loopQuestion[index];\n            elements.push(\n              <div key={item.id} className=\"card p-4 shadow-sm mb-4\" style={{ width: \"50%\" }}>\n              <div className=\"card-header bg-light\">Frage {index + 1}</div>\n              <div className=\"card-body\">\n                <p>{item.question}</p>\n                <form>\n                {(() => {\n                  const options = [];\n                  const parsedOptions = Array.isArray(item.options)\n                  ? item.options\n                  : JSON.parse(item.options || \"[]\"); // Parse options if it's a string\n                  for (let optIndex = 0; optIndex < parsedOptions.length; optIndex++) {\n                  const option = parsedOptions[optIndex];\n                  options.push(\n                    <div className=\"form-check\" key={optIndex}>\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name={`question-${item.id}`}\n                      id={`option-${item.id}-${optIndex}`}\n                      value={option}\n                      onChange={(e) => handleOptionChange(item.id, e.target.value)}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor={`option-${item.id}-${optIndex}`}\n                    >\n                      {option}\n                    </label>\n                    </div>\n                  );\n                  }\n                  return options;\n                })()}\n                </form>\n              </div>\n              </div>\n            );\n          }\n          return elements;\n        })()}\n\n        <div className=\"d-flex text-center mt-3\">\n          <button className=\"btn btn-primary\" onClick={submitQuiz}>Antwort bestätigen</button>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default QuizPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}