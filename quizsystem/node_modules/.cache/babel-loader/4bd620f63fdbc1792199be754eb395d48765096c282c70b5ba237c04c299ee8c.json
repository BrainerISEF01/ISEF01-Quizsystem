{"ast":null,"code":"var _jsxFileName = \"/Users/tamaraendorasudharto/Documents/ISEF01-Quizsystem/quizsystem/src/components/QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./Header\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { BASE_URL } from '../fetchApi';\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const base_url = BASE_URL;\n  const location = useLocation();\n  const data = location.state;\n  const socket = io(base_url);\n  const [question, setQuestion] = useState({});\n  const [timeLeft, setTimeLeft] = useState(data.timerDuration);\n  const navigate = useNavigate();\n  const gameId = data.gameId;\n  const userId = data.userId;\n  var quizId = '';\n  useEffect(() => {\n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else {\n      submitQuiz();\n    }\n  }, [timeLeft]);\n  const loopQuestion = data.questions || [];\n  const handleOptionChange = (questionId, value) => {\n    setQuestion(prev => ({\n      ...prev,\n      [questionId]: value\n    }));\n  };\n  const updateScore = async arr => {\n    try {\n      const response = await fetch(`${base_url}/quiz/updateUserScore`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(arr)\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const result = await response.json();\n      console.log(result.msg);\n    } catch (error) {\n      console.error(\"Error updating score:\", error);\n    }\n  };\n  const submitQuiz = async () => {\n    try {\n      var aTrue = 0;\n      var uScore = 0;\n      for (const item of loopQuestion) {\n        const dataPost = {\n          quizId: data.quizId,\n          questionId: item.id,\n          answer: question[item.id] || null,\n          // Send the selected answer or null if not answered\n          userId: sessionStorage.getItem('user_id')\n        };\n        const response = await fetch(`${base_url}/quiz/submit`, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(dataPost)\n        });\n        if (!response.ok) {\n          console.log(`Error submitting question ${item.id}: ` + response.statusText);\n          alert(`Failed to submit answer for question ${item.id}`);\n          return;\n        }\n        const result = await response.json();\n        //console.log(result);\n        if (result.correctCount > 0) {\n          aTrue++;\n          uScore += result.correctCount;\n        }\n        quizId = result.quizId;\n      }\n\n      // Update score in gamedata\n      const dataPostScore = {\n        gameId: gameId,\n        userId: userId,\n        score: uScore\n      };\n      await updateScore(dataPostScore);\n\n      //alert(\"All answers submitted successfully\");\n      socket.emit(\"gameDone\", {\n        username: sessionStorage.getItem('email'),\n        gameId: gameId\n      });\n      //console.log(\"Quiz ID \"+quizId);\n      navigate(\"/quizende\", {\n        state: {\n          gameId: gameId,\n          quizId: quizId\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      alert(\"An error occurred while submitting the answers\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid d-flex flex-column min-vh-100 px-0\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"d-flex flex-column align-items-center flex-grow-1 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end w-50 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge bg-danger fs-5\",\n          children: [timeLeft, \" Sekunden, \", data.mode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), (() => {\n        const elements = [];\n        for (let index = 0; index < loopQuestion.length; index++) {\n          const item = loopQuestion[index];\n          elements.push(/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-4 shadow-sm mb-4\",\n            style: {\n              width: \"50%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-light\",\n              children: [\"Frage \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: (() => {\n                  const options = [];\n                  const parsedOptions = Array.isArray(item.options) ? item.options : JSON.parse(item.options || \"[]\"); // Parse options if it's a string\n                  for (let optIndex = 0; optIndex < parsedOptions.length; optIndex++) {\n                    const option = parsedOptions[optIndex];\n                    options.push(/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-check\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-check-input\",\n                        type: \"radio\",\n                        name: `question-${item.id}`,\n                        id: `option-${item.id}-${optIndex}`,\n                        value: option,\n                        onChange: e => handleOptionChange(item.id, e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 21\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"form-check-label\",\n                        htmlFor: `option-${item.id}-${optIndex}`,\n                        children: option\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 21\n                      }, this)]\n                    }, optIndex, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 21\n                    }, this));\n                  }\n                  return options;\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this));\n        }\n        return elements;\n      })(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex text-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: submitQuiz,\n          children: \"Antwort best\\xE4tigen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"rWrt4dvQX61LLBBupdbTmaF5GiM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","Header","useNavigate","useLocation","BASE_URL","io","jsxDEV","_jsxDEV","QuizPage","_s","base_url","location","data","state","socket","question","setQuestion","timeLeft","setTimeLeft","timerDuration","navigate","gameId","userId","quizId","token","sessionStorage","getItem","timer","setTimeout","clearTimeout","submitQuiz","loopQuestion","questions","handleOptionChange","questionId","value","prev","updateScore","arr","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","result","json","console","log","msg","error","aTrue","uScore","item","dataPost","id","answer","alert","correctCount","dataPostScore","score","emit","username","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mode","elements","index","length","push","style","width","options","parsedOptions","Array","isArray","parse","optIndex","option","type","name","onChange","e","target","htmlFor","onClick","_c","$RefreshReg$"],"sources":["/Users/tamaraendorasudharto/Documents/ISEF01-Quizsystem/quizsystem/src/components/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./Header\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { BASE_URL } from '../fetchApi';\nimport { io } from \"socket.io-client\";\n\nconst QuizPage = () => {\n  const base_url = BASE_URL;\n  const location = useLocation();\n  const data = location.state;\n  const socket = io(base_url);\n\n  const [question, setQuestion] = useState({});\n  const [timeLeft, setTimeLeft] = useState(data.timerDuration);\n  const navigate = useNavigate();\n\n  const gameId = data.gameId;\n  const userId = data.userId;\n  var quizId = '';\n\n  useEffect(() => {\n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    }else{\n      submitQuiz();\n    }\n  }, [timeLeft]);\n\n  const loopQuestion = data.questions || [];\n\n  const handleOptionChange = (questionId, value) => {\n    setQuestion((prev) => ({\n      ...prev,\n      [questionId]: value,\n    }));\n  };\n\n  const updateScore = async (arr) => {\n    try {\n      const response = await fetch(`${base_url}/quiz/updateUserScore`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(arr),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      console.log(result.msg);\n    } catch (error) {\n      console.error(\"Error updating score:\", error);\n    }\n  };\n\n  const submitQuiz = async () => {\n    try {\n      var aTrue = 0;\n      var uScore = 0;\n      for (const item of loopQuestion) {\n        const dataPost = {\n          quizId: data.quizId,\n          questionId: item.id,\n          answer: question[item.id] || null, // Send the selected answer or null if not answered\n          userId: sessionStorage.getItem('user_id')\n        };\n\n        const response = await fetch(`${base_url}/quiz/submit`, {\n          method: \"POST\",\n          headers: {\n          'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(dataPost)\n        });\n\n        if (!response.ok) {\n          console.log(`Error submitting question ${item.id}: ` + response.statusText);\n          alert(`Failed to submit answer for question ${item.id}`);\n          return;\n        }\n\n        const result = await response.json();\n        //console.log(result);\n        if(result.correctCount > 0){\n          aTrue++;\n          uScore += result.correctCount;\n        }\n\n        quizId = result.quizId;\n\n      }\n\n      // Update score in gamedata\n      const dataPostScore = {\n        gameId: gameId,\n        userId: userId,\n        score: uScore\n      };\n      await updateScore(dataPostScore);\n\n      //alert(\"All answers submitted successfully\");\n      socket.emit(\"gameDone\",{\n        username:sessionStorage.getItem('email'),\n        gameId: gameId\n      });\n      //console.log(\"Quiz ID \"+quizId);\n      navigate(\"/quizende\", { state: {gameId:gameId,quizId:quizId} });\n    } catch (error) {\n      console.log(error);\n      alert(\"An error occurred while submitting the answers\");\n    }\n  };\n\n  return (\n    <div className=\"container-fluid d-flex flex-column min-vh-100 px-0\">\n      <Header />\n      <main className=\"d-flex flex-column align-items-center flex-grow-1 mt-5\">\n        <div className=\"d-flex justify-content-end w-50 mb-2\">\n          <span className=\"badge bg-danger fs-5\">{timeLeft} Sekunden, {data.mode}</span>\n        </div>\n\n        {(() => {\n          const elements = [];\n          for (let index = 0; index < loopQuestion.length; index++) {\n            const item = loopQuestion[index];\n            elements.push(\n              <div key={item.id} className=\"card p-4 shadow-sm mb-4\" style={{ width: \"50%\" }}>\n              <div className=\"card-header bg-light\">Frage {index + 1}</div>\n              <div className=\"card-body\">\n                <p>{item.question}</p>\n                <form>\n                {(() => {\n                  const options = [];\n                  const parsedOptions = Array.isArray(item.options)\n                  ? item.options\n                  : JSON.parse(item.options || \"[]\"); // Parse options if it's a string\n                  for (let optIndex = 0; optIndex < parsedOptions.length; optIndex++) {\n                  const option = parsedOptions[optIndex];\n                  options.push(\n                    <div className=\"form-check\" key={optIndex}>\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name={`question-${item.id}`}\n                      id={`option-${item.id}-${optIndex}`}\n                      value={option}\n                      onChange={(e) => handleOptionChange(item.id, e.target.value)}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor={`option-${item.id}-${optIndex}`}\n                    >\n                      {option}\n                    </label>\n                    </div>\n                  );\n                  }\n                  return options;\n                })()}\n                </form>\n              </div>\n              </div>\n            );\n          }\n          return elements;\n        })()}\n\n        <div className=\"d-flex text-center mt-3\">\n          <button className=\"btn btn-primary\" onClick={submitQuiz}>Antwort bestätigen</button>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default QuizPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}